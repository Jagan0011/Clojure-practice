(require '[clojure.set :as set])
 (def numbers (set '(1 2 3 4 5)))
 (def stats (set '(10 2 30 4)))
 (def stats1 (set '(2  4)))
 (println  numbers)
 (println  (get numbers 2))
 (println (sorted-set 4 2 8 3))
 (println (contains? numbers 3))
 (println (contains? numbers 30))
 (println (count numbers))
 (println (conj numbers 20))
 (println (disj numbers 3))
 (println (set/union numbers stats))
 (println (set/subset? numbers stats))
 (println (set/subset? stats1 numbers ))
 (println (set/superset? numbers stats))
 (println (set/superset? numbers stats1))
